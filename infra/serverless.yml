service: crypto-alert-app
frameworkVersion: '4'

package:
  patterns:
    - '../services/**'

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  profile: 023718874208

  iam:
    role:
      statements:
        # Permissions for DynamoDB config table
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${self:service}-config"
        # Allow fetcher to invoke the analyzer Lambda
        - Effect: Allow
          Action:
            - lambda:InvokeFunction
          Resource:
            - "arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:service}-${opt:stage,'dev'}-analyzer"

  environment:
    CONFIG_TABLE: ${self:service}-config
    ALERT_TOPIC_ARN:
      Ref: AlertTopic

functions:
  fetcher:
    handler: services/fetcher/handler.handler
    environment:
      ANALYZER_FUNCTION_NAME: ${self:service}-${opt:stage,'dev'}-analyzer
    events:
      - schedule: rate(1 minute)

  analyzer:
    handler: services/analyzer/handler.handler

  api:
    handler: services/api/handler.handler
    events:
      - httpApi: '*'

  notify:
    handler: services/notify/handler.handler
    environment:
      EMAIL_FROM: "alerts@yourdomain.com"
      EMAIL_TO:   "youremail@example.com"
    # subscription is set up below in resources

resources:
  Resources:
    ConfigTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.CONFIG_TABLE}
        AttributeDefinitions:
          - AttributeName: ticker
            AttributeType: S
        KeySchema:
          - AttributeName: ticker
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    AlertTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}-${opt:stage,'dev'}-alerts

    NotifySubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn:
          Ref: AlertTopic
        Protocol: lambda
        Endpoint:
          Fn::GetAtt:
            - NotifyLambdaFunction
            - Arn

    PermissionForSNSInvokeLambda:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName:
          Fn::GetAtt:
            - NotifyLambdaFunction
            - Arn
        Action: lambda:InvokeFunction
        Principal: sns.amazonaws.com
        SourceArn:
          Ref: AlertTopic